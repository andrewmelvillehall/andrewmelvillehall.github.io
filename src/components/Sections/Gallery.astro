---
interface Props {
  images: string[];
  alt?: string;
}

const { images, alt = "Product image" } = Astro.props;
---

<div class="w-full max-w-2xl mx-auto">
  <!-- Main Image Display -->
  <div class="mb-4 aspect-square bg-gray-100 rounded-lg overflow-hidden">
    <img
      id="mainImage"
      src={images[0]}
      alt={alt}
      class="w-full h-full object-cover cursor-zoom-in transition-transform hover:scale-105"
    />
  </div>

  <!-- Thumbnail Grid -->
  <!-- Thumbnail Grid -->
  <div
    class="flex gap-2 sm:gap-3 overflow-x-auto pb-2 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100"
  >
    {
      images.map((image, index) => (
        <button
          type="button"
          class="thumbnail flex-shrink-0 w-20 h-16 sm:w-24 sm:h-20 bg-gray-100 rounded-lg overflow-hidden border-2 border-transparent hover:border-gray-300 transition-all focus:outline-none focus:border-blue-500"
          data-index={index}
        >
          <img
            src={image}
            alt={`${alt} thumbnail ${index + 1}`}
            class="w-full h-full object-cover"
          />
        </button>
      ))
    }
  </div>
</div>

<script>
  const mainImage = document.getElementById("mainImage") as HTMLImageElement;
  const thumbnails = document.querySelectorAll(".thumbnail");
  const images = Array.from(thumbnails).map(
    (thumb) => thumb.querySelector("img")?.src || ""
  );

  // Update active thumbnail styling
  function setActiveThumbnail(index: number) {
    thumbnails.forEach((thumb, i) => {
      if (i === index) {
        thumb.classList.add("border-blue-500", "border-2");
        thumb.classList.remove("border-transparent");
      } else {
        thumb.classList.remove("border-blue-500", "border-2");
        thumb.classList.add("border-transparent");
      }
    });
  }

  // Set first thumbnail as active on load
  setActiveThumbnail(0);

  // Handle thumbnail clicks
  thumbnails.forEach((thumbnail, index) => {
    thumbnail.addEventListener("click", () => {
      if (mainImage) {
        mainImage.src = images[index];
        setActiveThumbnail(index);
      }
    });
  });
</script>

<style>
  /* Optional: Add any custom styles here */
</style>
